"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A datetime and timezone string in ISO 8601 format `Y-m-dTH:i:sO`, e.g. `2020-04-20T13:53:12+02:00`."
scalar DateTimeTz @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTimeTz")

type Query {
    users: [User!]! @all @guard(with:["api"])
    user(id: ID @eq): User @find
    posts: [Post!]! @all
    post(id: Int! @eq): Post @find
}

type Post {
  id: ID!
  title: String!
  content: String!
  author: User! @belongsTo @guard(with:["api"])
  comments: [Comment!]! @hasMany
}

type Comment {
  id: ID!
  reply: String!
  post: Post! @belongsTo
}

input CreatePostInput {
    title:String! @rules(apply:["min:1","max:150"])
    content: String!
}
input CreateTransactionInput {
    reply:String! @rules(apply:["min:1","max:150"])
    post_id: ID! @rules(apply:["required"])
}

type Mutation {
  createUser(name: String!, email: String!, password: String!): User @create
  updateUser(id: ID, email: String, password: String): User @update
  deleteUser(id: ID!): User @delete
  deleteUsers(id: [ID!]!): [User!]! @delete
  createPost(input: CreatePostInput! @spread): Post @create @inject(context:"user.id", name:"user_id") @guard(with:["api"])
  createTransaction(input:CreateTransactionInput! @spread): Comment @create @guard(with:["api"])
}
